<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://nant.sf.net/release/0.91-alpha2/nant.xsd"
         name="Woofy"
         default="all">

	<property name="configuration" value="Release"/>
	<property name="version.Major" value="1" />
	<property name="version.Minor" value="2" />
	<property name="version.BuildNumber" value="5" />
	<property name="version.Revision" value="0"  />
	
	<property name="dir.Current" value="${directory::get-current-directory()}"/>
	<property name="dir.App" value="${dir.Current}\src\Woofy"/>
	<property name="dir.Build" value="${dir.Current}\build" />
	<property name="dir.Source" value="${dir.Build}\src" />
	<property name="dir.BuildTemplates" value="${dir.Current}\build-files"/>
	<property name="dir.ComicDefinitions" value="${dir.Current}\src\ComicDefinitions" />
	<property name="dir.Woofy" value="${dir.Source}\bin\${configuration}" />
	<property name="file.PlaintextChangelog" value="${dir.Build}\changelog.txt"/>	

	<property name="date.Now" value="${datetime::now()}"/>
    <property name="date.Today" value="${datetime::get-year(date.Now)}-${string::pad-left(int::to-string(datetime::get-month(date.Now)), 2, '0')}-${string::pad-left(int::to-string(datetime::get-day(date.Now)), 2, '0')}"/>
    
    <property name="woofy.Version" value="${version.Major}.${version.Minor}${version.BuildNumber}" />
    <property name="woofy.ZipFileName" value="Woofy-${woofy.Version}.zip"/>
    <property name="woofy.ZipFile" value="${dir.Build}\${woofy.ZipFileName}"/>
    <property name="woofy.ExeFileName" value="Woofy-${woofy.Version}-setup.exe"/>
    <property name="woofy.ExeFile" value="${dir.Build}\${woofy.ExeFileName}" />
    

    <target name="recreate-build-folder">
        <delete dir="${dir.Build}"  />
        <mkdir dir="${dir.Build}"/>
    </target>

	<target name="read-hg-revision" depends="recreate-build-folder">
		<exec program="hg" commandline="tip -g --template {rev}" output="${dir.Build}\hg-rev.txt" />
		<loadfile file="${dir.Build}\hg-rev.txt" property="version.Revision" />
		
	</target>

	<target name="copy-sources-to-intermediary-folder" depends="recreate-build-folder">
		<copy todir="${dir.Source}">
			<fileset basedir="${dir.App}" >
				<include name="**.*" />
				<exclude name="bin\**" />
				<exclude name="obj\**" />
			</fileset>
		</copy>
		
		<copy todir="${dir.Build}\packages">
        <fileset basedir="${dir.Current}\src\packages">
            <include name="**.*"/>
        </fileset>
    </copy>

		<copy file="${dir.BuildTemplates}\AssemblyInfo.template" tofile="${dir.Source}\Properties\AssemblyInfo.cs" overwrite="true">
			<filterchain>			
				<replacetokens>
					<token key="MAJOR" value="${version.Major}" />
					<token key="MINOR" value="${version.Minor}" />
					<token key="BUILDNUMBER" value="${version.BuildNumber}" />
					<token key="REVISION" value="${string::trim(version.Revision)}" />
				</replacetokens>
			</filterchain>
		</copy>
	</target>

    <target name="compile" depends="copy-sources-to-intermediary-folder" >
		<msbuild project="${dir.Source}\Woofy.csproj" target="Clean"/>
		<msbuild project="${dir.Source}\Woofy.csproj" target="Build">
			<property name="Configuration" value="${configuration}" />
		</msbuild>
    </target>

    <target name="copyToBuild" depends="compile">
        <copy todir="${dir.Build}\definitions">
            <fileset basedir="${dir.ComicDefinitions}">
                <include name="*.def"/>
            </fileset>
        </copy>

        <copy todir="${dir.Build}\Woofy">
            <fileset basedir="${dir.Woofy}">
                <include name="**.*"/>
                <exclude name="*.xml"/>
                <exclude name="*.pdb"/>
            </fileset>
            <filterchain>
                <replacetokens>
                    <token key="WOOFYVERSION" value="${woofy.Version}" />
                </replacetokens>
            </filterchain>
        </copy>     

        <copy todir="${dir.Build}\Woofy\definitions">
            <fileset basedir="${dir.ComicDefinitions}">
                <include name="*.def"/>
            </fileset>
        </copy>
        
        <copy todir="${dir.Build}">
            <fileset basedir="${dir.BuildTemplates}">
                <include name="*.*" />
            </fileset>
            <filterchain>
                <replacetokens>
                    <token key="APPVERSION" value="${woofy.Version}" />
                    <token key="APPFULLVERSION" value="${woofy.Version}" />
                    <!--<token key="WOOFYEXEFILENAME" value="${woofy.ExeFileName}" />
                    
                    <token key="TODAY" value="${date.Today}" />-->
                </replacetokens>
            </filterchain>
        </copy>
        
    </target>
    
    <target name="zipFiles" depends="copyToBuild" >
        <zip zipfile="${woofy.ZipFile}">
            <fileset basedir="${dir.Build}">
                <include name="Woofy\**.*"/>
            </fileset>
        </zip>        
    </target>

    <target name="createInstallers" depends="zipFiles"
            >
        <exec program="tools\Inno Setup\ISCC.exe" commandline='"${dir.Build}\setup.iss"' />
    </target>    

    <target name="updateAutoUpdateFiles"  depends="createInstallers">
        <property name="woofy.ExeFileSize" value="${file::get-length(woofy.ExeFile)}"/>

        <!-- After the installers are created, copy the auto-update files again because we now have the the file size tokens -->
        <copy todir="${dir.Build}" overwrite="true">
            <fileset basedir="${dir.BuildTemplates}">
                <include name="updatesDescriptionFile.xml"  />
                <include name="pad_file.xml" />
            </fileset>
            <filterchain>
                <replacetokens>                   
                    <token key="WOOFYVERSION" value="${woofy.Version}" />
                    <token key="WOOFYEXEFILESIZE" value="${woofy.ExeFileSize}" />
                    
                    <token key="TODAY" value="${date.Today}" />
                    <token key="TODAYYEAR" value="${datetime::get-year(date.Now)}" />
                    <token key="TODAYMONTH" value="${datetime::get-month(date.Now)}" />
                    <token key="TODAYDAY" value="${datetime::get-day(date.Now)}" />
                </replacetokens>
            </filterchain>
        </copy>
    </target>

    <target name="all" depends="createInstallers">
    </target>
    
</project>